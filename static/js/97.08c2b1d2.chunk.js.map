{"version":3,"file":"static/js/97.08c2b1d2.chunk.js","mappings":"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","sources":["styles/BehaviorsList.styled.jsx","components/BehaviorsList.jsx","components/BehaviorsItem.jsx","utils/areBehaviorsEqual.js","pages/Behaviors.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const StyledBehaviorsList = styled.ul`\n  width: 360px;\n  margin: 0 auto;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  margin-bottom: 129px;\n`;\n\nexport const StyledBehaviorsItem = styled.li`\n  flex-basis: calc((100% - (2 - 1) * 16px) / 2);\n  padding: 12px 24px 12px 15px;\n  height: 60px;\n  display: flex;\n  align-items: center;\n  flex-wrap: nowrap;\n  gap: 10px;\n  border-radius: 15px;\n  border: 1px solid ${props => props.theme.colors.light};\n  background-color: ${props => props.theme.colors.clearWhite};\n  cursor: pointer;\n  transition: box-shadow 300ms ease-in-out, border-color 300ms ease-in-out;\n  ${({ isSelected, theme }) =>\n    isSelected &&\n    `\n    border: 1px solid ${theme.colors.green}; \n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n  `}\n`;\nexport const StyledBehaviorImage = styled.img`\n  width: 30px;\n  height: 30px;\n`;\nexport const StyledBehaviorsDescription = styled.p`\n  color: ${props => props.theme.colors.black};\n  font-size: 12px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n  letter-spacing: 0.3px;\n`;\n","import { StyledBehaviorsList } from 'styles/BehaviorsList.styled';\n\nexport const BehaviorsList = ({ children }) => {\n  return <StyledBehaviorsList>{children}</StyledBehaviorsList>;\n};\n","import {\n  StyledBehaviorsItem,\n  StyledBehaviorImage,\n  StyledBehaviorsDescription,\n} from '../styles/BehaviorsList.styled';\nimport { assetsData } from 'assets/assets';\nexport const BehaviorsItem = ({ behavior, onSelect }) => {\n  const { title, image, text, selected } = behavior;\n  const handleClick = () => {\n    onSelect({ ...behavior, selected: !selected });\n  };\n  return (\n    <StyledBehaviorsItem onClick={handleClick} isSelected={selected}>\n      <StyledBehaviorImage\n        src={assetsData[image]}\n        alt={title}\n        width={30}\n        loading=\"lazy\"\n      />\n      <StyledBehaviorsDescription>{text}</StyledBehaviorsDescription>\n    </StyledBehaviorsItem>\n  );\n};\n","export const areBehaviorsEqual = (behaviors1, behaviors2) => {\n  return (\n    behaviors1.length === behaviors2.length &&\n    behaviors1.every(\n      (behavior, index) =>\n        behavior.id === behaviors2[index].id &&\n        behavior.selected === behaviors2[index].selected\n    )\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Description } from 'components/Description';\nimport { Section } from 'components/Section';\nimport { Title } from 'components/Title';\nimport { ContentWrapper } from '../styles/Pages.styled';\nimport behaviorsData from '../MockData/behaviors.json';\nimport { BehaviorsList } from 'components/BehaviorsList';\nimport { BehaviorsItem } from 'components/BehaviorsItem';\nimport { useAppContext } from '../Store/AppContext';\nimport { ContinueButton } from 'components/ContinueButton';\nimport { handleContinue } from '../utils/handleContinue';\nimport { areBehaviorsEqual } from 'utils/areBehaviorsEqual';\n\nconst Behaviors = () => {\n  const { selectedData, updateSelectedData } = useAppContext();\n  const navigate = useNavigate();\n\n  const [localBehaviors, setLocalBehaviors] = useState(behaviorsData);\n\n  useEffect(() => {\n    if (selectedData.behaviors) {\n      const updatedBehaviors = localBehaviors.map(behavior =>\n        selectedData.behaviors.find(\n          selectedBehavior => selectedBehavior.id === behavior.id\n        )\n          ? { ...behavior, selected: true }\n          : behavior\n      );\n\n      if (!areBehaviorsEqual(localBehaviors, updatedBehaviors)) {\n        setLocalBehaviors(updatedBehaviors);\n      }\n    }\n  }, [localBehaviors, selectedData.behaviors]);\n\n  const handleBehaviorSelect = selectedBehavior => {\n    const foundBehavior = localBehaviors.find(\n      behavior => behavior.id === selectedBehavior.id\n    );\n\n    if (foundBehavior) {\n      foundBehavior.selected = !foundBehavior.selected;\n      setLocalBehaviors([...localBehaviors]);\n    }\n  };\n\n  const handleButtonClick = () => {\n    const nextPage = selectedData.page + 1;\n\n    const updatedGlobalBehaviors = localBehaviors.reduce(\n      (acc, localBehavior) => {\n        if (selectedData.behaviors) {\n          const globalBehavior = selectedData.behaviors.find(\n            global => global && global.id === localBehavior.id\n          );\n\n          if (localBehavior.selected) {\n            acc.push(localBehavior);\n          } else if (globalBehavior && globalBehavior.selected) {\n            acc.push({ ...globalBehavior, selected: false });\n          }\n        }\n        return acc;\n      },\n      []\n    );\n\n    updateSelectedData({ behaviors: updatedGlobalBehaviors });\n    handleContinue(nextPage, updateSelectedData, navigate);\n  };\n\n  return (\n    <Section>\n      <ContentWrapper>\n        <Title>Destructive behaviors</Title>\n        <Description>We all have them! Which are yours?</Description>\n      </ContentWrapper>\n      {localBehaviors && (\n        <BehaviorsList>\n          {localBehaviors.map(behavior => (\n            <BehaviorsItem\n              key={behavior.id}\n              behavior={behavior}\n              onSelect={() =>\n                handleBehaviorSelect({\n                  ...behavior,\n                  selected: !behavior.selected,\n                })\n              }\n            />\n          ))}\n        </BehaviorsList>\n      )}\n\n      <ContinueButton onClick={handleButtonClick}>Continue</ContinueButton>\n    </Section>\n  );\n};\n\nexport default Behaviors;\n"],"names":["StyledBehaviorsList","styled","ul","_templateObject","_taggedTemplateLiteral","StyledBehaviorsItem","li","_templateObject2","props","theme","colors","light","clearWhite","_ref","isSelected","concat","green","StyledBehaviorImage","img","_templateObject3","StyledBehaviorsDescription","p","_templateObject4","black","BehaviorsList","children","_jsx","BehaviorsItem","behavior","onSelect","title","image","text","selected","_jsxs","onClick","handleClick","src","assetsData","alt","width","loading","Behaviors","selectedData","updateSelectedData","useAppContext","navigate","useNavigate","localBehaviors","setLocalBehaviors","useState","behaviorsData","useEffect","behaviors","updatedBehaviors","map","find","selectedBehavior","id","behaviors2","behaviors1","length","every","index","areBehaviorsEqual","Section","ContentWrapper","Title","Description","foundBehavior","handleBehaviorSelect","ContinueButton","handleButtonClick","nextPage","page","updatedGlobalBehaviors","reduce","acc","localBehavior","globalBehavior","global","push","handleContinue"],"sourceRoot":""}